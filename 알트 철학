보통 우리가 생각하는 알고리즘-트레이딩 시나리오

한번에 다 모든것을 이해한다 생각하면은 분명 어렵고 
코드자체도 복잡한게 많기 때문에 이 공부를 놓아버릴 확률이 많다는것을 알게된다
때문에 하나하나에만 집중하여서 조금씩 나에게 많은 방법으로 코드 한두개씩 추가하면서
자신만의 Style Coder를 해나갔으면 좋겠다 나같은 경우는 다크풀(우이라 버전 1.01)이라면서 파일을 저장한다 
물론 인터넷에 나와있는것하고는 조금은 다른다 하지만 이런 부분이 분명 나중에 가면 차이를 만들거라 

항상 이야기하는거지만 이런 기술적인 내용을 담는 책 같은경우에는 항상 실용적인 접근을 하라고 이야기해주고 싶다
그냥 원하는 부분만 읽고 가는게 훨씬 좋다 앞에서 부터 쭈르륵다 하다보면 막히는게 하나라도 나오면
강물의 이동처럼 그냥 막혀버리고 만다 그럴빠에는 원하는 부분을 읽고 재접근성을 높이는 것이 중요하다

나는 자는 새벽동안 컴퓨터카 미국증시의 패턴을 분석해서 카톡으로 데이터분석자료를 보내준다
유가증권시장(코스피)/코스닥에서 거래량 60일 평균값이 500% 종목을 알려준다
주식종목추천 사이트의 무료종목 추천을 매일매일 검색하여 종목을 미리알려준다

정확히는 커맨더의 논리에 따라 순차적으로 실행한다 그리고 평가대상은 특정 코드 한줄이 아닌
전체적인 영역에서의 코드를 살펴봐야한다


개미들이 성공하기 힘든원인
*정보의 부족
*시간의 부족

그리고 트레이딩 코딩자체에 포커스를 두고있었가지고
단순히 지표가 어떤값을 가지는지에 대해서 고민하다긴 보단
거래코드에 포커스를 둔다는 점을 말해주고 싶다


zipline을 이용한 이동평균선 전략에는
골드크로스 데드크로스전략이 있다



그리고 동아리나 모임을 운영하면서 느끼는 가장 중요한 것 중에 하나는
꼭 실전영역으로 들어가라는 말을 많이 한다 왜냐하면 적은 돈이라도 
어떻게 보면 이것저것 시도하여서 짠 코드가 정말로 시장에서 반응된다면
(물론 수익률을 신경쓰라는 말이 아니다) 본인의 동기부여에도 굉장히 큰 임팩트가 있을거라 확신한다

A-B C-D까지 옮겨가는 과정에 지속적이고 본능적인 욕구를 충족하고 그것을 극복하는 과정에서만
오래갈수있을거라 확신하기 때문에 관련된 과정을 이해하는 편이 중요하다

Algorithm Trading의 핵심은 바로 BackTesting이다 

과거와 현재는 명확하게 구분되어야 하지만
기본적으로 생각을 해보면 정말 재미있는 요소는 바로 이 백테스트과정이라고 생각한다
내가 짠 여러 알고리즘과 예측이론을 혼합하여 시장에 반응하게 놔둘수있다는 점이 있다

중요한것은 우리의 알고리즘 백서가 코드 2~3로 끝나지 않을것이기 때문에
항상 대응적인 측면이 중요하다 
더해서 일봉데이터를 데이터베이스에 저장하는법

PyTrader



